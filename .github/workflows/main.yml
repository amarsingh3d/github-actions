name: Semiannual PR Creation

on:
  workflow_dispatch
env:
  GITHUB_URL: "github.com"
  GITHUB_ACCESS_TOKEN: "${{ secrets.GIT_TOKEN }}"
  ORG_NAME: "amarsingh3d"
  GIT_USER: "${{ secrets.GIT_USER }}"
  GIT_EMAIL: "${{ secrets.GIT_EMAIL }}"

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: |
          echo "${GITHUB_ACCESS_TOKEN}" | gh auth login --with-token

      - name: Get all repositories and create PRs
          
        run: |
          # Fetch all organization repositories
          repos=$(gh repo list $ORG_NAME --limit 500 --json name -q '.[].name')

          # Loop through each repo and create a PR
          for repo in $repos; do
            echo "Processing $repo..."

            # Error handling: Continue on error
            {
              # Get the default branch of the repository
              default_branch=$(gh repo view $ORG_NAME/$repo --json defaultBranchRef -q '.defaultBranchRef.name')
              echo "Default branch for $repo is $default_branch"

              # Clone the repository
              gh repo clone $ORG_NAME/$repo
              cd $repo

              # Setup Git user
              git config --global user.email "${GIT_EMAIL}"
              git config --global user.name "${GIT_USER}"
              git remote set-url origin https://${GITHUB_ACCESS_TOKEN}@${GITHUB_URL}/$ORG_NAME/$repo.git

              # Create a new branch
              git checkout -b semiannual-update

              # Make changes to files (e.g., update README or add a version tag)
              echo "Semiannual update - $(date)" >> README.md
              git add README.md
              git commit -m "Semiannual update"

              # Remove the remote branch if it exists
              git push origin --delete semiannual-update || true

              # Push the branch to the repository
              git push origin semiannual-update --force

              # Create the PR, using the default branch as base
              gh pr create --title "Semiannual Update" --body "Automated semiannual update" --base $default_branch --head semiannual-update

              cd ..
              rm -rf $repo # Clean up

            } || {
              echo "Error processing $repo, moving to next repository."
              echo "Skipped Repo lists: $repo"
            }

          done
